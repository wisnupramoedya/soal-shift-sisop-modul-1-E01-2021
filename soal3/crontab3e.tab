# Edit this file to introduce tasks to be run by cron.
# 
# Each task to run has to be defined through a single line
# indicating with different fields when the task will be run
# and what command to run for the task
# 
# To define the time you can provide concrete values for
# minute (m), hour (h), day of month (dom), month (mon),
# and day of week (dow) or use '*' in these fields (for 'any').
# 
# Notice that tasks will be started based on the cron's system
# daemon's notion of time and timezones.
# 
# Output of the crontab jobs (including errors) is sent through
# email to the user the crontab file belongs to (unless redirected).
# 
# For example, you can run a backup of all your user accounts
# at 5 a.m every week with:

# crontab3b
0 20 1-31/7,2-31/4 * * cd /home/wisnupramoedya/Programming/Bash/modul-1/soal-shift-sisop-modul-1-E01-2021/soal3 && bash soal3b.sh >/dev/null 2>&1

# crontab3e
* 0-7,18-23 * * 1-5 cd /home/wisnupramoedya/Programming/Bash/modul-1/soal-shift-sisop-modul-1-E01-2021/soal3 && if [[ ($(ls Koleksi.zip | awk 'END {print NR}')) ]]; then modif_date=$(stat --format="%y" Koleksi.zip); pass_date=$(date -d "$modif_date" "+%m%d%Y"); unzip -P $pass_date Koleksi.zip; rm Koleksi.zip; fi;
* * * * 0,6 cd /home/wisnupramoedya/Programming/Bash/modul-1/soal-shift-sisop-modul-1-E01-2021/soal3 && if [[ ($(ls Koleksi.zip | awk 'END {print NR}')) ]]; then modif_date=$(stat --format="%y" Koleksi.zip); pass_date=$(date -d "$modif_date" "+%m%d%Y"); unzip -P $pass_date Koleksi.zip; rm Koleksi.zip; fi;
* 7-18 * * 1-5 cd /home/wisnupramoedya/Programming/Bash/modul-1/soal-shift-sisop-modul-1-E01-2021/soal3 && bash soal3d.sh

# just for net
*/15 * * * * wisnupramoedya arping -c 1 192.168.1.1
# 
# For more information see the manual pages of crontab(5) and cron(8)
# 
# m h  dom mon dow   command